%div#spinnerdiv{style: 'display: none; top: 50%; left: 50%;'}
  #floatingCirclesG
    #frotateG_01.f_circleG
    #frotateG_02.f_circleG
    #frotateG_03.f_circleG
    #frotateG_04.f_circleG
    #frotateG_05.f_circleG
    #frotateG_06.f_circleG
    #frotateG_07.f_circleG
    #frotateG_08.f_circleG
.full-screen-area
  .search-content
    = form_tag({action: :show},{method: :post, id: 'filters_form', class: 'works_filters'}) do
      = hidden_field_tag :id, params['id']
      = hidden_field_tag :q, params['q']
      = hidden_field_tag :qid, params['qid']
      %input{:name => "utf8", :type => "hidden", :value => "✓"}/
      %input#sort_by{:name => "sort_by", :type => "hidden", :value => "alphabetical_asc"}/
      .filters-panel
        .sara-button.button-primary#apply_filters{style:'display:none'}= t('filters.apply')
        .flex-headline-space-between
          %p.headline-3= t('filters.filter_by')
          %a#reset_filters{href: ''}= t('filters.clear_all')
        .sort-type
          .vertical-expand.fcoll{"data-target" => ".collforigin", "data-toggle" => "collapse"}
            %p.headline-4= t('filters.database')
          .nested.active.collapse.show.collforigin
            .nested-content.nested-list
              - ResponseItem.sources.invert.each do |p|
                .option-line
                  - attrs = {}
                  - attrs.merge!({:name => "ckb_sources[]", :type => "checkbox", id: "source_#{p[1]}", value: p[1]})
                  - attrs.merge!({checked: 'checked'}) if @sources.present? && @sources.include?(p[1])
                  %input{ attrs}
                  %label
                    = t(p[1])
                  %br/
        -#.sort-type
        -#  .vertical-expand.fcoll{"data-target" => ".collfmetadata", "data-toggle" => "collapse"}
        -#    %p.headline-4 אזכור הנושא במטה-דאטה
        -#  .nested.active.collapse.show.collfmetadata
        -#    .nested-content.nested-list
        -#      .option-line
        -#        %input#headline{:name => "ckb_metadata[]", :type => "checkbox", :value => "headline"}>/
        -#        כותרת
        -#      .option-line
        -#        %input#author{:name => "ckb_ckb_metadata[]", :type => "checkbox", :value => "author"}>/
        -#        יוצרים/ות
        -#      .option-line
        -#        %input#description{:name => "ckb_metadata[]", :type => "checkbox", :value => "description"}>/
        -#        תיאור
        -#      .option-line
        -#        %input#additional-authors{:name => "ckb_metadata[]", :type => "checkbox", :value => "additional-authors"}>/
        -#        יוצרים/ות נוספים
        -#.sort-type
        -#  .vertical-expand.fcoll{"data-target" => ".collfaccess", "data-toggle" => "collapse"}
        -#    %p.headline-4 סוג גישה
        -#  .nested.active.collapse.show.collfaccess
        -#    .nested-content.nested-list
        -#      .option-line
        -#        %input#digital-far{:name => "ckb_access[]", :type => "checkbox", :value => "digital-far"}>/
        -#        דיגיטלית מרחוק
        -#      .option-line
        -#        %input#physical-local{:name => "ckb_ckb_access[]", :type => "checkbox", :value => "physical-local"}>/
        -#        פיזית מקומית
        .sort-type
          .vertical-expand.fcoll{"data-target" => ".collfinfotype", "data-toggle" => "collapse"}
            %p.headline-4= t('filters.type')
          .nested.active.collapse.show.collfinfotype
            .nested-content.nested-list{:style => "column-count: 2"}
              - ResponseItem.media_types.invert.each do |p|
                .option-line
                  - attrs = {}
                  - attrs.merge!({:name => "ckb_types[]", :type => "checkbox", id: "mtype_#{p[1]}", value: p[1]})
                  - attrs.merge!({checked: 'checked'}) if @media_types.present? && @media_types.include?(p[1])
                  %input{ attrs}
                  %label
                    = t(p[1])
                  %br/
        .sort-type
          .vertical-expand.fcoll{"data-target" => ".collfdates", "data-toggle" => "collapse"}
            %p.headline-4= t('filters.dates')
          .nested.active.collapse.show.collfdates
            .nested-content.nested-list{:style => "column-count: 1"}
              .dates-range
                %input#fromdate{"data-target" => "#fromdate", "data-toggle" => "datetimepicker", :name => "fromdate", :placeholder => "משנה", value: @fromdate.present? ? @fromdate : ''}/
                %div= t('filters.to')
                %input#todate{"data-target" => "#todate", "data-toggle" => "datetimepicker", :name => "todate", :placeholder => "שנה", value: @todate.present? ? @todate : ''}/
        %input#cur_page_tag{:name => "cur_page", :type => "hidden", :value => "1"}/
        %input#page_tag{:name => "page", :type => "hidden", :value => ""}/
    .subjects-fixed-top-elements
      .right-gap-large
        .filter-tags-area
          .tags-right
            %p
              %strong= t('.result_count')
              = t('.x_results', x: @items.count)
            .tag-line
              .tag
                = @query.text
                %a.by-icon-v02{:href => "#"} -
          .left-bottons-area
            %button#delete-from-list-button.sara-button.button-primary.disabled
              .by-icon-v02> ^
              = t('.remove_from_list')
            %button#add-to-fav-button.sara-button.button-primary.disabled
              .by-icon-v02> '"'
              = t('.add_to_fav')
            - enable = @favorite_items_count > 0 ? '' : ' disabled'
            %a{href: outline_path(id: @project.id)}
              %button#create-outline-button{class: 'sara-button button-primary'+enable}
                .by-icon-v02> J
                = t('.create_outline')
        .view-switch-line
          = t(:display_colon)
          .small-switch
            %button#item-by-type.small-switch-option.sort-by.active= t('.by_type')
            %button#flat-list.small-switch-option.sort-by= t('.flat_list')
    .results-side
      .dashboard-views{style: 'margin-top: 121px;'}
        .flex-headline-space-between
          %p.headline-3= t('.summary_by_type')
          %a.by-icon-v02{:href => "#"} -
        .dashboard
          - @items.group(:media_type).count.each do |mtype, count|
            .dashboard-item{'data-mtype' => mtype}
              %p.headline-4
                %a{:href => "#"}= textify_media_type(mtype)
                = "(#{count})"
              .d-frame.d1
              .d-frame.d2
              .d-frame.d3
                %a{:href => "#"}
                  .dashboard-item-right
                    - mtype_img = image_for_media_type(mtype)
                    - unless mtype_img.empty?
                      .dashboard-image
                        = image_tag mtype_img, {alt: textify_media_type(mtype)}
                  -#.dashboard-item-left
                  -#  .result-sources-icons
                  -#    %img{:alt => "הספריה הלאומית של ישראל", :src => "/assets/nli_logo_24.png"}/
                  -#  .result-type-label תמונה
      .results-by-type
        .results-list
          .flex-headline-space-between
            %div
              %p.headline-3
                תוצאות לפי סוג פריט
                %span{:style => "font-weight: normal"}= @items.count.to_s
            .collapsed.vertical-expand.fcoll{"data-target" => "", "data-toggle" => "collapse"}
              %p הרחבת כל הפריטים
          - @items.to_a.group_by(&:media_type).each do |mtype, items|
            .item-type-headline
              %p.headline-4
                %a{:href => "#"}= textify_media_type(mtype)
                = "(#{items.count})"
            - items.each do |item|
              .card-line
                %input.ckitem{:id => "ck_#{item.id}", :name => "ck_#{item.id}", :type => "checkbox", :value => "", 'data-external-id' => item.external_id, 'data-source' => item.source}
                .result-item
                  .result-item-content
                    - if item.thumbnail_url.present?
                      .subject-picture
                        %img{src: item.thumbnail_url}
                    .result-texts
                      - if item.title.present?
                        %b
                          = link_to item.title, item.url, target: '_blank'
                        %br
                      %p= item.text
                    %a.by-icon-v02.fav{:href => "#", 'data-id' => item.id}= item.favorite ? '"' : '!'
                  .result-item-buttom-area
                    -#.result-typr-labels-area
                    -#  .result-type-label תמונה
                    -#  .result-type-label ארכיון
                    .collapsed.vertical-expand.fcoll{"data-target" => "", "data-toggle" => "collapse"}
                    .result-origin
                      = image_tag image_for_source(item.source), {alt: textify_source(item.source), height: '24px', width: '24px'}
        .notes-area
          .note
            .flex-headline-space-between
              %p.headline-3 הידעת?
              %a.by-icon-v02.closenote{:href => "#"} -
            .note-content
              .sara-icon b
              %div
                %p מוצגים עד 10 פריטים לכל סוג - ניתן לצפות בכל הפריטים בכל סוג בלחיצה על הקישור המתאים.
                %p
                  לצפיה נוחה בכלל הפריטים, לאפשרות מיון ולבחירה של עד 100 פריטים יחד עברו ל
                  %a{:href => "#"}> רשימה שטוחה
                  \.
          .note
            .flex-headline-space-between
              %p.headline-3 הידעת?
              %a.by-icon-v02.closenote{:href => "#"} -
            .note-content
              .sara-icon b
              %div
                %p
                  פריטים נוספים המתאימים לתוצאות השאילתה זמינים לעיון מקומי בלבד. ניתן להוסיפם לרשימה על ידי שינוי המסנן מימין ״סוג גישה״ או בקישורית מטה
                  = succeed "." do
                    %a{:href => "#"} הכללת פריטים אשר אינם זמינים לגישה מרחוק

-#%h1= t('.header', query_text: @query.text)
-#- @query.response_items.to_a.group_by(&:source).each do |source, items|
-#  %h2= t("activerecord.attributes.response_item.sources.#{source}")
-#  .row
-#    - items.each do |item|
-#      .col-lg-2.col-sm-3
-#        .card
-#          - if item.thumbnail_url.present?
-#            = image_tag item.thumbnail_url, alt: item.title
-#          .card-body
-#            %h5.card-title
-#              = link_to item.title, item.url, target: :blank
-#            %p.card-text= item.text
:javascript
  function startModal(id) {
      $("body").prepend("<div id='PopupMask' style='position:fixed;width:100%;height:100%;z-index:10;background-color:gray;'></div>");
      $("#PopupMask").css('opacity', 0.5);
      $("#"+id).css( "z-index" , 11 );
      $("#"+id).css( "position" , "fixed" );
      $("#"+id).css( "display" , "block" );
  }
  function update_fav_count(value_to_set) {
    cur_fav_count = parseInt($('#favorites_count').text().match(/\d+/)[0]);
    new_fav_count = cur_fav_count + (value_to_set ? 1 : -1);
    if(new_fav_count == 0) {
      $('#create-outline-button').addClass('disabled');
    } else {
      $('#create-outline-button').removeClass('disabled');
    }
    $('#favorites_count').text($('#favorites_count').text().replace(/\d+/, new_fav_count.toString())) ; // update fav count
  }
  function toggle_fav(item){
    value_to_set = true;
    if($(item).text() == '!') { // toggle fav icon
      $(item).text('"');
    } else {
      $(item).text('!');
      value_to_set = false;
    }
    // toggle fav in DB
    $.ajax({
      type: "POST",
      url: "#{toggle_favorite_response_item_path(id: '0')}".replace('0', $(item).data('id')),
      beforeSend(xhr) {
        xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))
      },
      data: {
          value: value_to_set,
          id: $(item).attr('data-id'),
      }
    });
    update_fav_count(value_to_set);
  }
  $(document).ready(function() {
    $('#filters_form').on('change', function() {
      $('#apply_filters').show();
    });
    $('#apply_filters').on('click', function() {
      startModal('spinnerdiv');
      $('#filters_form').submit();
    });
    $('#reset_filters').click(function(e){
      e.preventDefault();
      $('#filters_form').find(':input').each(function() {
        switch(this.type) {
          case 'password':
          case 'select-multiple':
          case 'select-one':
          case 'text':
          case 'textarea':
            $(this).val('');
            break;
          case 'checkbox':
          case 'radio':
            this.checked = false;
        }
      });
      startModal('spinnerdiv');
      $('#filters_form').submit();
    });
    $('.closenote').click(function(e){
      e.preventDefault();
      $(this).parent().parent().hide();
    });
    $('.ckitem').change(function(e){
      if($('.ckitem:checked').length > 0 ) {
        $('#delete-from-list-button').removeClass('disabled');
        $('#add-to-fav-button').removeClass('disabled');
      } else {
        $('#delete-from-list-button').addClass('disabled');
        $('#add-to-fav-button').addClass('disabled');
      }
    });
    $('#add-to-fav-button').click(function(e){
      e.preventDefault();
      if($('.ckitem:checked').length > 0 ) {
        $('.ckitem:checked').each(function(i, item) {
          target = $(item).parent().find('.fav')[0];
          toggle_fav(target);
        });
      }
    });
    $('#delete-from-list-button').click(function(e){
      e.preventDefault();
      if($('.ckitem:checked').length > 0 ) {
        $('.ckitem:checked').each(function(i, item) {
          $.ajax("#{project_ignored_items_path(project_id: @project.id)}", {
            type: "POST",
            beforeSend(xhr) {
              xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))
            },
            data: {
              project_id: "#{@project.id}", 
              ignored_item: {external_id: $(this).attr('data-external-id'), source: $(this).attr('data-source')}
            },
            success: function(data) {
              $(item).parent().remove();
              $('.ckitem').change();
            }
          });
        });
      }
    });
    $('.dashboard-item').click(function(e){
      e.preventDefault();
      $('#mtype_'+$(this).attr('data-mtype')).prop('checked', true);
      startModal('spinnerdiv');
      $('#filters_form').submit();
    });
    $('.fav').click(function(e){
      e.preventDefault();
      toggle_fav(this);
    });
  });
