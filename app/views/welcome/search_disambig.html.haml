= content_for :head do
  %script{ src: "https://maps.googleapis.com/maps/api/js?key=#{ENV['GOOGLE_MAPS_JS_API_KEY']}" }
  %script{ src: "https://unpkg.com/@googlemaps/markerclusterer/dist/index.min.js" }

%script{ type: 'text/javascript', charset:'utf-8', src: asset_url('histropedia-1.2.0.js')}
%div#spinnerdiv{style: 'display: none; top: 50%; left: 50%;'}
  #floatingCirclesG
    #frotateG_01.f_circleG
    #frotateG_02.f_circleG
    #frotateG_03.f_circleG
    #frotateG_04.f_circleG
    #frotateG_05.f_circleG
    #frotateG_06.f_circleG
    #frotateG_07.f_circleG
    #frotateG_08.f_circleG
.full-screen-area
  .search-content
    .subjects-fixed-top-elements
      %div{:style => "margin-right: 220px"}
        .filter-tags-area
          .tags-right
            %p
              %strong= t(:x_topics_found, x: @topic_count)
            .tag-line
              - if @q.present?
                .tag
                  = t(:search_string, q: @q)
                  %a.by-icon-v02{:href => "#"} -
          .left-bottons-area
            %button#search-subject-results-button.sara-button.button-primary.disabled
              = t(:search_this_topic)
              .by-icon-v02 1
        .view-switch-line
          = t(:display_colon)
          .small-switch
            %button#list.small-switch-option.sort-by.active= t(:display_list)
            %button#timeline.small-switch-option.sort-by= t(:display_timeline)
            %button#map.small-switch-option.sort-by= t(:display_map)
    = form_tag(search_disambig_path, method: :post, id: 'filters_form') do
      = hidden_field_tag :base_query, params['base_query']
      = hidden_field_tag :qid, params['qid']
      = hidden_field_tag :q, params['q']
      .filters#filters
        .subjects-filter
          .flex-headline-space-between.vertical-expand{"data-bs-target" => "#time_filter", "data-bs-toggle" => "collapse"}
            %p.headline-3= t('filters.by_year')
            .sara-icon c
          #time_filter{"data-bs-parent" => "#filters", class: "collapse #{(@filters['fromdate'].present? || @filters['todate'].present?) ? 'show' : ''}"}
            %div{style: "display: flex; flex-direction: column; gap: 12px;"}
              %select#filter_by_time{:name => "date_filter"}
                %option{:value => "birth_date", selected: @filters['date_filter'] == 'birth_date' ? true : false}= t('filters.birth_date')
                %option{:value => "death_date", selected: @filters['date_filter'] == 'death_date' ? true : false}= t('filters.death_date')
                %option{:value => "inception_date", selected: @filters['date_filter'] == 'inception_date' ? true : false}= t('filters.inception_date')
              .dates-range
                %input#fromdate{"data-target" => "#fromdate", "data-toggle" => "datetimepicker", :name => "fromdate", :placeholder => t(:year), value: @filters['fromdate']}/
                %div= t(:to)
                %input#todate{"data-target" => "#todate", "data-toggle" => "datetimepicker", :name => "todate", :placeholder => t(:year), value: @filters['todate']}/
              - if @filters['fromdate'].present? || @filters['todate'].present?
                .bottom-buttons-line
                  %a#clear_dates{:href => ""}= t('filters.cancel')
              - else
                .bottom-buttons-line
                  = submit_tag t('filters.add'), class: 'sara-button button-primary filters-submit'
      
        .subjects-filter
          .flex-headline-space-between
            %p.headline-3 סינון לפי מיקום
            .sara-icon m
          .bottom-buttons-line
            %a{:href => ""} הוספת מסנן
        .subjects-filter
          .flex-headline-space-between.vertical-expand{"data-bs-target" => "#gender_f", "data-bs-toggle" => "collapse"}
            %p.headline-3= t('filters.by_gender')
            .sara-icon g
          #gender_f{"data-bs-parent" => "#filters", class: "collapse #{@filters['gender'].present? ? 'show' : ''}"}
            %div{style: "display: flex; flex-direction: column; gap: 12px;"}
              %select#filter_by_gender{:name => "gender"}
                %option{:value => '', selected: true}= ''
                %option{:value => "Q6581097", selected: @filters['gender'] == 'Q6581097' ? true : false}= t('filters.male')
                %option{:value => "Q6581072", selected: @filters['gender'] == 'Q6581072' ? true : false}= t('filters.female')
                %option{:value => "other", selected: @filters['gender'] == 'other' ? true : false}= t('filters.other')
              - if @filters['gender'].present?
                .bottom-buttons-line
                  %a#clear_gender{:href => ""}= t('filters.cancel')
              - else
                .bottom-buttons-line
                  = submit_tag t('filters.add'), class: 'sara-button button-primary filters-submit'

    .subjects
      .results-area
        .results-list{style: 'margin-top: 121px;'}
          - if @results.present?
            - @sorted_keys.each do |qid|
              .result-item
                - if @results[qid]['thumbnail'].present? # if result has a picture
                  .subject-picture
                    %img{alt: @results[qid][:label], src: @results[qid]['thumbnail']}
                .result-texts
                  .flex-headline-space-between
                    - if @results[qid]['instance-of'].present? && @results[qid]['instance-of'].include?('Q5') # human
                      - birth = @results[qid]['birthyear'].present? ? @results[qid]['birthyear'] : '?'
                      - death = @results[qid]['deathyear'].present? ? @results[qid]['deathyear'] : ''
                      %p.headline-3= @results[qid][:label]+ " (#{birth}–#{death})"
                      = @results[qid][:description]
                    - else
                      %p.headline-3= @results[qid][:label]
                      = @results[qid][:description]
                    .result-sources-icons
                      - if @results[qid]['wikipedia_url'].present?
                        = image_tag 'Wikipedia_logo_24.png', {alt: t(:wikipedia), title: t(:wikipedia)} 
                      - if @results[qid]['nli_id'].present?
                        = image_tag 'nli_logo_24.png', {alt: t(:nli), title: t(:nli)}
                      - if @results[qid]['benyehuda_url'].present?
                        = image_tag 'pby_logo_24.png', {alt: t(:pby), title: t(:pby)}
                  .results-limited-text
                    - if @results[qid]['occupations'].present?
                      %p
                        = t(:occupations)+': '
                        = @results[qid]['occupations'].map{|occ| @labels[occ] || '...'}.join('; ')
                      %p
                        = t(:nationality)+': '
                        = @labels[@results[qid]['nationality']]
                    - if @results[qid]['wikipedia_url'].present?
                      %a{href: @results[qid]['wikipedia_url']}= t(:to_wikipedia)
          - else
            %h3= t('filters.too_many_results', count: @topic_count)
        .timeline{style:'margin-top:121px;display:none;'}
          %h3= t(:display_timeline)
          #histropedia-timeline
        .map{style:'margin-top:121px;display:none;'}
          %h3= t(:display_map)
          #map_container{ style: "height: 600px; width: 1024px;" }
= form_for([Project.last, Query.new]) do |f|
  = f.hidden_field :text, class: 'form-control', id: 'search_q'
  = f.submit t('projects.show.run'), style: 'display:none'

:javascript
  function startModal(id) {
    $("body").prepend("<div id='PopupMask' style='position:fixed;width:100%;height:100%;z-index:10;background-color:gray;'></div>");
    $("#PopupMask").css('opacity', 0.5);
    $("#"+id).css( "z-index" , 11 );
    $("#"+id).css( "position" , "fixed" );
    $("#"+id).css( "display" , "block" );
  }

  function selectItem(qid, search_q) {
    $('#qid').val(qid);
    $('#search_q').val(search_q);
    $('#search-subject-results-button').removeClass('disabled');
  };


  $(document).ready(function() {
    $('.result-item').click(function(e) {
      e.stopPropagation();
      $('.result-item').removeClass('active');
      $(this).addClass('active');
      $('#search-subject-results-button').removeClass('disabled');
    });
    $('#search-subject-results-button').click(function(e) {
      if(!$(this).hasClass('disabled')) {
        if($('.results-list').css('display') != 'none') {
          $('#search_q').val($('div.result-item.active > div.result-texts > div.flex-headline-space-between > p').text());
        }
        startModal('spinnerdiv');
        $('form').submit();
      } else alert('#{ t(:please_select_topic) }');
    });
    $('#clear_dates').click(function(e) {
      e.preventDefault();
      $('#fromdate').val('');
      $('#todate').val('');
      startModal('spinnerdiv');
      $('#filters_form').submit();
    });
    $('#clear_gender').click(function(e) {
      e.preventDefault();
      $('#filter_by_gender').val('');
      startModal('spinnerdiv');
      $('#filters_form').submit();
    });
    $('.filters-submit').click(function(e) {
      startModal('spinnerdiv');
    });
    $('#timeline').click(function(e) {
      e.preventDefault();
      $('.results-list').hide();
      $('.timeline').show();
      $('#timeline').addClass('active');
      $('#list').removeClass('active');
      $('#map').removeClass('active');
      $('.map').hide();
    });
    $('#map').click(function(e) {
      e.preventDefault();
      $('.results-list').hide();
      $('#list').removeClass('active');
      $('.timeline').hide();
      $('#timeline').removeClass('active');
      $('.map').show();
      $('#map').addClass('active');
    });
    $('#list').click(function(e) {
      e.preventDefault();
      $('.results-list').show();
      $('#list').addClass('active');
      $('.timeline').hide();
      $('#timeline').removeClass('active');
      $('#map').removeClass('active');
      $('.map').hide();
    });

    try {
      // prep timeline
      const container = document.getElementById('histropedia-timeline');
      if (container != null) {
        const data = JSON.parse("#{j(raw @timeline_data)}");
        let min = null;
        let minVal = Infinity;
        data.forEach((item) => {
          if(item.from != null) {
            const val = item.from.year * 10000; // + item.from.month * 100 + item.from.day;
            if (val < minVal) {
              minVal = val;
              min = item;
            }
          }
        });
        const timeline = new Histropedia.Timeline(container, { height: 700, article: {distanceToMainLine: 100},
          initialDate: (min ? min.from : 19800000),
          article: {autoStacking: {topGap: 0, fitToHeight: false}},
          onArticleClick: function(article) { selectItem(article.id, article.title); },
          onArticleDoubleClick: function(article) {
          }
        });
        timeline.load(data);
      }
    } catch (e) {
      console.error(e);
    }

    const map = new google.maps.Map(
        document.getElementById('map_container'),
        {
          center: { lat: 31.771959, lng: 35.217018 }, /* coordinates of Jerusalem */
          zoom: 2
        }
    );

    const markers = [];

    #{raw @map_markers.to_json}.forEach(item => {
      const marker = new google.maps.Marker({
        position: { lat: item['latitude'], lng: item['longitude'] },
        map,
        title: item['title'],
        icon: item['icon']
      });
      marker.addListener("click", () => { selectItem(item['qid'], item['title']); });
      markers.push(marker);
    });

    new markerClusterer.MarkerClusterer({ markers, map });
  });
