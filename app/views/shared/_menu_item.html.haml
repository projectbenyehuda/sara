- if node['nodetype'] == 'branch' && node['nodes'].present?
  %div{class: "vertical-expand level-#{level} fcoll", "data-bs-target" => "#collf_#{level}_#{ordinal}", "data-bs-toggle" => "collapse", title: node['description']}
    %p.headline-4= node['title']
  .nested.collapse{id: "collf_#{level}_#{ordinal}", 'data-bs-parent' => parent}
    .nested-content.nested-list
      - ordinal = 0
      - node['nodes'].each do |inode|
        - ordinal += 1
        = render partial: 'shared/menu_item', locals: { node: inode, level: level + 1, ordinal: ordinal, parent: "#collf_#{level}_#{ordinal}" }
- elsif node['nodetype'] == 'wikidata_query' && node['base_query'].present?
  = link_to search_disambig_path(base_query: node['base_query']) do
    %div{class: "vertical-expand level-#{level} fcoll", title: node['description']}
      %p.headline-4= node['title']
  %p= 'Please pick at least one filter:'
  = form_tag 'filters' do
    %ul
      - @filters['wikidata'].select{|f| f['relevant_base_queries'].include?(node['base_query'])}.each do |f|
        %li
          %b= f['title']
          = " (#{f['description']})"
          - f['param_count'].times do |i|
            - default_value = f['default_param_values'][i] if f['default_param_values'].present?
            - case f['lookup_type']
            - when 'autocomplete'
              = text_field_tag "param_#{f['tag']}_#{i}", nil, {placeholder: default_value, 'data-behavior': 'autocomplete', 'data-tag': f['tag']}
              = hidden_field_tag "param_#{f['tag']}_#{i}_value"
            - when 'dropdown'
              = select_tag "param_#{f['tag']}_#{i}", options_for_select(options_from_query(f['tag']), default_value), {include_blank: :true, 'data-tag': f['tag']}
            - when ''
              = text_field_tag "param_#{f['tag']}_#{i}", nil, {placeholder: '1950', 'data-tag': f['tag']}
          = button_tag 'run query!', {id: 'run_'+f['tag'], class: 'run_query', data: {'base-query': node['base_query'], 'tag': f['tag'], 'disable_with': 'querying...'}}
- else
  = 'leaf'
